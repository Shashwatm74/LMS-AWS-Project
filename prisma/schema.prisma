datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id               String         @id @default(uuid())
  name             String
  regNumber        String         @unique
  password         String
  email            String         @unique
  roleId           Int
  role             Role           @relation(fields: [roleId], references: [id])
  Class            Class[]
  ClassStudent     ClassStudent[]
  resetToken       String?
  resetTokenExpiry DateTime?
  otps             Otp[]
}

model Class {
  id          Int            @id @default(autoincrement())
  name        String
  professorId String
  professor   User           @relation(fields: [professorId], references: [id])
  students    ClassStudent[]
}

model ClassStudent {
  classId   Int
  class     Class  @relation(fields: [classId], references: [id])
  studentId String
  student   User   @relation(fields: [studentId], references: [id])

  @@id([classId, studentId])
}

model Otp {
  id        String   @id @default(uuid())
  regNumber String
  otp       String
  expiresAt DateTime
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [regNumber], references: [regNumber])
}

model Notice {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userName  String
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  year        Int
  noOfCopies  Int
  edition     String
  category    String
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
